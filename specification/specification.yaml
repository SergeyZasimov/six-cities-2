openapi: 3.0.3
info:
  title: API сервер для курсового проекта «Шесть городов»
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов»
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
tags:
  - name: offers
    description: Действия с объявлениями.
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователями.
paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Сохраняет нового пользователя в базу данных.

      requestBody:
        description: Данные для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'

      responses:
        "201":
          description: Пользователь зарегистрирован. Возвращает объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "400":
          description: Отправлены неверные данные.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Пароль должен быть больше 6 символов и не более 12.
        "409":
          description: Пользователь с таким email уже существует.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя.
      description: Авторизация пользователя по логину и паролю.

      requestBody:
        description: Данные для авторизация пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUser'

      responses:
        "200":
          description: Успешная авторизация.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "400":
          description: Отправлены неверные данные.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Пароль должен быть больше 6 символов и не более 12.

    get:
      tags:
        - users
      summary: Проверка состояния пользователя.
      description: Проверка состояния пользователя по токену.

      requestBody:
        description: Токен.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checkAuth'

      responses:
        "200":
          description: Статус пользователя - авторизован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "401":
          description: Пользователь не авторизован.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Вы не имеете доступа к этим ресурсам.

  /users/logout:
    delete:
      tags:
        - users
      summary: Выход из закрытой части приложения.
      description: Завершает сеанс работы в закрытой части приложения.
        Остаются доступными ресурсы, не требующие авторизации.

      requestBody:
        description: Токен.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checkAuth'

      responses:
        "204":
          description: Сеанс завершён.


components:
  schemas:
    createUser:
      type: object

      properties:
        email:
          type: string
          example: user@mail.com

        name:
          type: string
          minLength: 1
          maxLength: 15
          example: John Smith

        password:
          type: string
          minLength: 6
          maxLength: 12
          example: qwerty1234

        avatar:
          type: string
          example: user1.jpg

        type:
          type: string
          example: Default
          enum:
            - Default
            - Pro

      required:
        - email
        - name
        - password

    user:
      type: object
      properties:
        id:
          type: string
          example: 632db7ffa4c4750721ab0616

        email:
          type: string
          example: user@mail.com

    loginUser:
      type: object
      properties:
        email:
          type: string
          example: user@mail.com

        password:
          type: string
          minLength: 6
          maxLength: 12
          example: qwerty1234

    checkAuth:
      type: object
      properties:
        token:
          type: string
          example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=
